特点:
1. 每个用户都有一个初始帐号，包含一定的金额
2. 用户可以向图书馆借书(每次还书后扣除一定费用)，没有结余时不能借书。
3. 查询某用户的账号和当前所借图书的详细信息，参数为用户。
4. 查询每本书的当前剩余数量、总借阅数量以及用户之间的当前借阅状态。

需要实现的API端点:
1. 创建一个用户端点，请求参数支持设置初始数量，返回用户ID
2. 创建一个带有用户ID和图书ID参数的借阅事务
3. 创建一个带有用户ID和图书ID参数的还书事务
4. 查询用户的账户状态，参数为用户ID，返回当前余额，以及借阅的书籍。
获取的金额，包含，已支付与待支付，
5. 查询某本书的实际收入，参数为该书的ID和时间范围，并返回该书在这段时间内获得的交易金额。
6. 为用户创建月度和年度报告，包括借阅书籍的数量和花费的金额。

补充部分:
1. 您可以选择任何Ruby框架来完成此API
2. 请提供API文档，让我们知道如何请求您的服务。
3. 将设计思想记录在README.md中
4. 为了节省时间，用户模块可以考虑使用成熟的Gem实现。
5. 如果时间允许，最好部署一个可以直接调用的演示地址
6. 在任何时候，用户的余额必须大于或等于0。
7. 关于账面收益函数，如果没有时间，你是做不到的。

尽量实现所有的功能，我们将根据以下几点进行评估:
1. 完成了多少功能，完成的质量如何
2. 整个应用程序的设计、代码质量等
3.整体/部分解决方案和设计思路
4. 测试代码覆盖率和质量